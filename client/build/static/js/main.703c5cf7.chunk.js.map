{"version":3,"sources":["components/MessageForm.jsx","imgs/spyicon.png","components/Login.jsx","components/UserDisplay.jsx","App.js","reportWebVitals.js","index.js"],"names":["MessageForm","props","useState","io","socket","input","setInput","messages","setMessages","useEffect","console","log","on","inputMessage","prevMessages","className","slice","reverse","map","msg","i","user","message","onSubmit","e","preventDefault","emit","type","name","autoComplete","value","onChange","target","Login","userName","setUserName","history","useHistory","src","spyicon","alt","login","push","UserDisplay","users","id","App","setUser","userList","setUserList","list","disconnect","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.703c5cf7.chunk.js","sourcesContent":["\nimport React, {useState, useEffect} from \"react\";\nimport io from \"socket.io-client\";\n\nfunction MessageForm(props) {\n  // connection to backend server\n    const [socket] = useState( () => io(\":8000\") );\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    // const [updated, setUpdated] = useState(false);\n\n\n\n    useEffect(() => {\n        console.log(\"Is this on?\")\n        socket.on(\"send chat\", inputMessage => {\n            setMessages(prevMessages => {return [...prevMessages, inputMessage]});\n        })\n        // optional space for extra components\n        },[]);\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        socket.emit(\"chat\", {user:props.user, message:input});\n        // setUpdated(!updated);\n        setInput(\"\");\n    }\n\n    const onChangeHandler = (e) => {\n        e.preventDefault();\n        setInput(e.target.value);\n    }\n\n    return (\n    <div className=\"messageFormDiv\">\n            {\n                messages.slice(0).reverse().map((msg, i) => {\n                return <div className=\"messageBox\" key={i}><h3 ><span className=\"userSpan\">{msg.user}: </span>{msg.message}</h3></div>\n            })\n                }\n        <form className=\"fixedForm\" onSubmit={onSubmitHandler}>\n            <input className=\"nameInput\" type=\"text\" name=\"message\" autoComplete=\"off\" value={input} onChange={onChangeHandler}/>\n            <input className=\"submitBtn\" type=\"submit\" value=\"submit\"/>\n        </form>\n    </div>\n    );\n}\n\nexport default MessageForm;","export default __webpack_public_path__ + \"static/media/spyicon.f3a7bb33.png\";","import React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport spyicon from \"../imgs/spyicon.png\"\n\n\n\nconst Login = (props) => {\n\n    const [socket] = useState( () => io(\":8000\") );\n    const [userName, setUserName] = useState(\"\")\n    \n    const history = useHistory();\n    // const {userName} = props;\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // const user = {userName};\n        props.login(userName);\n        history.push(\"/chat\");\n\n\n    }\n\n    return(\n        <div className=\"loginBox\">\n            <div className=\"flexBox\">\n                <img className=\"spy\" src={spyicon} alt=\"spy icon\" />\n                <h1 className=\"welcome\">Welcome to the Dead Drop! Please enter a screen name to start messaging!</h1>\n                <img className=\"spy\" src={spyicon} alt=\"spy icon\" />\n            </div>\n            <form className=\"loginForm\" onSubmit={submitHandler}>\n                <label>Name: </label>\n                <input className=\"nameInput\" type=\"text\" onChange={(e)=> {setUserName(e.target.value)}} />\n                <input className=\"submitBtn\" type=\"submit\" value=\"submit\" />\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\n\nconst UserDisplay = (props) => {\n\n    return(\n        <div className=\"userDisplay\">\n            <h3>Current Agents in chat:</h3>\n            <ul className=\"userList\">\n                {\n                    props.users.map((user, i) => {\n                        return <li key={i}>Agent: {user.user} | Agent ID: {user.id}</li>\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default UserDisplay;\n","import \"./App.css\"\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport MessageForm from './components/MessageForm';\nimport Login from \"./components/Login\";\nimport { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport UserDisplay from \"./components/UserDisplay\";\n\nfunction App() {\n\n  const [socket] = useState( () => io(\":8000\") );\n  const [user, setUser] = useState(\"\")\n  const [userList, setUserList] = useState([])\n\n  // const updateList = (userName) => {\n  //   console.log(\"updating the list...\")\n  //   setUserList([...userList, userName])\n  //   socket.emit(\"list\", userList);\n  // }\n  const login = (userName) => {\n    setUser(userName)\n    socket.emit(\"login\", userName)\n  }\n\n  useEffect( () => {\n    socket.on(\"userList\", list => {\n      setUserList(list);\n      console.log(\"user list: \", list);\n  });\n    return () => socket.disconnect(true);\n  },[socket])\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div className=\"flexBox\">\n          <Route exact path=\"/\">\n            <Login userList={userList} login={login} />\n          </Route>\n          <Route exact path=\"/chat\">\n            <MessageForm userList={userList} user={user}/>\n            <UserDisplay className=\"userDisplay\" users={userList}/>\n          </Route>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}